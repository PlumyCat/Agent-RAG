#!/bin/bash

# Script de configuration pour MCP-RAG avec Claude Desktop
# Usage: ./setup_mcp_rag.sh

echo "=== Configuration de MCP-RAG pour Claude Desktop ==="

# 1. V√©rifier Python
echo "‚Üí V√©rification de Python..."
if ! command -v python &> /dev/null; then
    echo "‚ùå Python n'est pas install√©. Installez Python 3.9+ d'abord."
    exit 1
fi

python_version=$(python --version 2>&1 | grep -oE '[0-9]+\.[0-9]+')
echo "‚úÖ Python $python_version d√©tect√©"

# 2. Cr√©er l'environnement virtuel si n√©cessaire
if [ ! -d ".venv" ]; then
    echo "‚Üí Cr√©ation de l'environnement virtuel..."
    python -m venv .venv
    echo "‚úÖ Environnement virtuel cr√©√©"
else
    echo "‚úÖ Environnement virtuel existant d√©tect√©"
fi

# 3. Activer l'environnement virtuel
echo "‚Üí Activation de l'environnement virtuel..."
source .venv/bin/activate

# 4. Installer les d√©pendances
echo "‚Üí Installation des d√©pendances..."
pip install --upgrade pip
pip install -r requirements.txt

# 5. Cr√©er le fichier .env si n√©cessaire
if [ ! -f ".env" ]; then
    echo "‚Üí Cr√©ation du fichier .env..."
    cp .env.example .env
    echo "‚ö†Ô∏è  IMPORTANT: Configurez vos cl√©s API dans le fichier .env"
else
    echo "‚úÖ Fichier .env existant d√©tect√©"
fi

# 6. V√©rifier PostgreSQL
echo "‚Üí V√©rification de PostgreSQL..."
if command -v psql &> /dev/null; then
    echo "‚úÖ PostgreSQL est install√©"
    echo "   Assurez-vous que:"
    echo "   - PostgreSQL est en cours d'ex√©cution"
    echo "   - La base de donn√©es 'mcp_rag' existe"
    echo "   - L'extension pgvector est install√©e"
else
    echo "‚ö†Ô∏è  PostgreSQL n'est pas d√©tect√©. Installation requise pour le stockage vectoriel."
fi

# 7. V√©rifier Redis (optionnel)
echo "‚Üí V√©rification de Redis (optionnel)..."
if command -v redis-cli &> /dev/null; then
    echo "‚úÖ Redis est install√© (cache activ√©)"
else
    echo "‚ÑπÔ∏è  Redis non d√©tect√© (le syst√®me fonctionnera sans cache)"
fi

# 8. V√©rifier Tesseract (pour OCR)
echo "‚Üí V√©rification de Tesseract OCR..."
if command -v tesseract &> /dev/null; then
    echo "‚úÖ Tesseract OCR est install√©"
else
    echo "‚ö†Ô∏è  Tesseract non d√©tect√©. Installation recommand√©e pour l'OCR:"
    echo "   Ubuntu/Debian: sudo apt install tesseract-ocr tesseract-ocr-fra"
    echo "   macOS: brew install tesseract"
fi

echo ""
echo "=== Configuration termin√©e ==="
echo ""
echo "üìã Prochaines √©tapes:"
echo "1. Configurez vos cl√©s API dans le fichier .env"
echo "2. Cr√©ez la base PostgreSQL avec pgvector:"
echo "   psql -U postgres -c 'CREATE DATABASE mcp_rag;'"
echo "   psql -U postgres -d mcp_rag -c 'CREATE EXTENSION IF NOT EXISTS vector;'"
echo "3. Copiez la configuration Claude Desktop:"
echo "   - Windows: %APPDATA%/Claude/claude_desktop_config.json"
echo "   - macOS: ~/Library/Application Support/Claude/claude_desktop_config.json"
echo "   - Linux: ~/.config/Claude/claude_desktop_config.json"
echo "4. Red√©marrez Claude Desktop"
echo ""
echo "üöÄ Pour tester le serveur MCP:"
echo "   python mcp_server.py"
echo ""
echo "üì± Pour lancer l'interface Streamlit:"
echo "   streamlit run streamlit_app.py"